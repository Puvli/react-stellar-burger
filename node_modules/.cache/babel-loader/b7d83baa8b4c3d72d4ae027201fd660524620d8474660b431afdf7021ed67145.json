{"ast":null,"code":"var _jsxFileName = \"D:\\\\practicum\\\\dev\\\\stellar-burgers\\\\src\\\\components\\\\app\\\\app.jsx\",\n  _s = $RefreshSig$();\nimport AppHeader from \"../AppHeader/AppHeader\";\nimport BurgerIngredients from \"../BurgerIngredients/BurgerIngredients\";\nimport BurgerConstructor from \"../BurgerConstructor/BurgerConstructor\";\nimport React from \"react\";\nimport IngredientDetails from \"../IngredientDetails/IngredientDetails\";\nimport OrderDetails from \"../OrderDetails/OrderDetails\";\nimport { Api } from \"../../utils/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const {\n    getIngredients\n  } = Api();\n  const [ingredients, setIngredients] = React.useState({\n    buns: [],\n    main: [],\n    sauces: []\n  });\n  React.useEffect(() => {\n    getIngredients().then(_ref => {\n      let {\n        data,\n        success\n      } = _ref;\n      if (success === true) {\n        setIngredients({\n          buns: data.filter(item => item.type === \"bun\"),\n          main: data.filter(item => item.type === \"main\"),\n          sauces: data.filter(item => item.type === \"sauce\")\n        });\n      } else {\n        console.log(\"Упс, что-то сломалось\");\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  }, []);\n  const [isOpenModalOrder, setOpenModalOrder] = React.useState(false);\n  const handleModalOrder = () => {\n    setOpenModalOrder(isOpenModalOrder ? false : true);\n  };\n  const [ingredientOpen, setOpenIngredient] = React.useState(false);\n  const [ingredientInfo, setIngredientInfo] = React.useState({});\n  const ingredientOpener = info => {\n    setIngredientInfo(info);\n    setOpenIngredient(ingredientOpen ? false : true);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(AppHeader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(BurgerIngredients, {\n      onOpen: ingredientOpener,\n      ingredients: ingredients\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(BurgerConstructor, {\n      onClick: handleModalOrder\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), \"(\", isOpenModalOrder && /*#__PURE__*/_jsxDEV(OrderDetails, {\n      onClick: handleModalOrder\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 28\n    }, this), \") (\", ingredientOpen && ingredientInfo && /*#__PURE__*/_jsxDEV(IngredientDetails, {\n      data: ingredientInfo,\n      onClose: ingredientOpener\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this), \")\"]\n  }, void 0, true);\n}\n_s(App, \"PKdhVZv5e1B6C7bhOTf/tihKi2M=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["AppHeader","BurgerIngredients","BurgerConstructor","React","IngredientDetails","OrderDetails","Api","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","getIngredients","ingredients","setIngredients","useState","buns","main","sauces","useEffect","then","_ref","data","success","filter","item","type","console","log","catch","err","isOpenModalOrder","setOpenModalOrder","handleModalOrder","ingredientOpen","setOpenIngredient","ingredientInfo","setIngredientInfo","ingredientOpener","info","children","fileName","_jsxFileName","lineNumber","columnNumber","onOpen","onClick","onClose","_c","$RefreshReg$"],"sources":["D:/practicum/dev/stellar-burgers/src/components/app/app.jsx"],"sourcesContent":["import AppHeader from \"../AppHeader/AppHeader\";\r\nimport BurgerIngredients from \"../BurgerIngredients/BurgerIngredients\";\r\nimport BurgerConstructor from \"../BurgerConstructor/BurgerConstructor\";\r\nimport React from \"react\";\r\nimport IngredientDetails from \"../IngredientDetails/IngredientDetails\";\r\nimport OrderDetails from \"../OrderDetails/OrderDetails\";\r\nimport { Api } from \"../../utils/api\";\r\n\r\nfunction App() {\r\n  const { getIngredients } = Api();\r\n\r\n  const [ingredients, setIngredients] = React.useState({\r\n    buns: [],\r\n    main: [],\r\n    sauces: [],\r\n  });\r\n\r\n  React.useEffect(() => {\r\n    getIngredients()\r\n      .then(({ data, success }) => {\r\n        if (success === true) {\r\n          setIngredients({\r\n            buns: data.filter((item) => item.type === \"bun\"),\r\n            main: data.filter((item) => item.type === \"main\"),\r\n            sauces: data.filter((item) => item.type === \"sauce\"),\r\n          });\r\n        } else {\r\n          console.log(\"Упс, что-то сломалось\");\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, []);\r\n\r\n  const [isOpenModalOrder, setOpenModalOrder] = React.useState(false);\r\n\r\n  const handleModalOrder = () => {\r\n    setOpenModalOrder(isOpenModalOrder ? false : true);\r\n  };\r\n\r\n  const [ingredientOpen, setOpenIngredient] = React.useState(false);\r\n  const [ingredientInfo, setIngredientInfo] = React.useState({});\r\n\r\n  const ingredientOpener = (info) => {\r\n    setIngredientInfo(info);\r\n    setOpenIngredient(ingredientOpen ? false : true);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <AppHeader />\r\n      <BurgerIngredients onOpen={ingredientOpener} ingredients={ingredients} />\r\n      <BurgerConstructor onClick={handleModalOrder} />(\r\n      {isOpenModalOrder && <OrderDetails onClick={handleModalOrder} />}) (\r\n      {ingredientOpen && ingredientInfo && (\r\n        <IngredientDetails data={ingredientInfo} onClose={ingredientOpener} />\r\n      )}\r\n      )\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}