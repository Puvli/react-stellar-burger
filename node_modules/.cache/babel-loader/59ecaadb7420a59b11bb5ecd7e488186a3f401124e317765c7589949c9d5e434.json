{"ast":null,"code":"const config = {\n  baseUrl: \"https://norma.nomoreparties.space/api\",\n  headers: {\n    Accept: \"application/json\",\n    \"Content-Type\": \"application/json\"\n  }\n};\nfunction checkResponse(res) {\n  if (res.ok) {\n    return res.json();\n  } else {\n    return Promise.reject(res.status);\n  }\n}\nexport function Api() {\n  const getIngredients = () => {\n    return fetch(`${config.baseUrl}`, {\n      headers: config.headers\n    }).then(res => checkResponse(res));\n  };\n  return getIngredients();\n}\n_c = Api;\nvar _c;\n$RefreshReg$(_c, \"Api\");","map":{"version":3,"names":["config","baseUrl","headers","Accept","checkResponse","res","ok","json","Promise","reject","status","Api","getIngredients","fetch","then","_c","$RefreshReg$"],"sources":["D:/practicum/dev/stellar-burgers/src/utils/api.js"],"sourcesContent":["const config = {\r\n  baseUrl: \"https://norma.nomoreparties.space/api\",\r\n  headers: {\r\n    Accept: \"application/json\",\r\n    \"Content-Type\": \"application/json\",\r\n  },\r\n};\r\n\r\nfunction checkResponse(res) {\r\n  if (res.ok) {\r\n    return res.json();\r\n  } else {\r\n    return Promise.reject(res.status);\r\n  }\r\n}\r\n\r\nexport function Api() {\r\n  const getIngredients = () => {\r\n    return fetch(`${config.baseUrl}`, {\r\n      headers: config.headers,\r\n    }).then((res) => checkResponse(res));\r\n  };\r\n\r\n  return getIngredients();\r\n}\r\n"],"mappings":"AAAA,MAAMA,MAAM,GAAG;EACbC,OAAO,EAAE,uCAAuC;EAChDC,OAAO,EAAE;IACPC,MAAM,EAAE,kBAAkB;IAC1B,cAAc,EAAE;EAClB;AACF,CAAC;AAED,SAASC,aAAaA,CAACC,GAAG,EAAE;EAC1B,IAAIA,GAAG,CAACC,EAAE,EAAE;IACV,OAAOD,GAAG,CAACE,IAAI,EAAE;EACnB,CAAC,MAAM;IACL,OAAOC,OAAO,CAACC,MAAM,CAACJ,GAAG,CAACK,MAAM,CAAC;EACnC;AACF;AAEA,OAAO,SAASC,GAAGA,CAAA,EAAG;EACpB,MAAMC,cAAc,GAAGA,CAAA,KAAM;IAC3B,OAAOC,KAAK,CAAE,GAAEb,MAAM,CAACC,OAAQ,EAAC,EAAE;MAChCC,OAAO,EAAEF,MAAM,CAACE;IAClB,CAAC,CAAC,CAACY,IAAI,CAAET,GAAG,IAAKD,aAAa,CAACC,GAAG,CAAC,CAAC;EACtC,CAAC;EAED,OAAOO,cAAc,EAAE;AACzB;AAACG,EAAA,GAReJ,GAAG;AAAA,IAAAI,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}